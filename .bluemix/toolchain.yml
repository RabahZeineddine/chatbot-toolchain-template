version: '2'
messages:
  $i18n: locales.yml
template:
  name:
    $ref: "#/messages/template.name"
  description:
    #original static description:
    #$ref: "#/messages/template.description"
    #template descriptions now vary depending on the flavor of source provider selected
    $ref: >
      $env.source_provider === 'githubconsolidated' ? 
      '#/messages/template.description.github' : '#/messages/template.description'
  # header: '![](toolchain.svg?localize)'
  icon: icon.svg
  required:
    - front-end-repo
    # - sample-build
  info:  
    # compute the git url and branch values dynamically so that they remain correct when repo is forked etc. 
    # note: `repository` url param must always be provided while the `branch` url param is optional
    # the computed urls are of the same format as the original static urls shown above
    git url: >
        '[' + $env.repository + '](' + $env.repository + ')'
    git branch: >
        $env.branch ?
          '[' + $env.branch + ']('+ $env.repository + '/tree/' + $env.branch + ')' :
          '[master]('+ $env.repository + '/tree/master)'
toolchain:
  name: 'chatbot-toolchain-{{timestamp}}'
  template:
    getting_started:
      $ref: "#/messages/template.gettingStarted"
services:
  front-end-repo:
    service_id: 'githubpublic'
    parameters:
      repo_name: '{{toolchain.name}}'
      repo_url: >
        $env.type === 'link' ? 
          $env.app_repo : 'https://github.com/RabahZeineddine/chatbot.git'
      source_repo_url: >
        $env.type === 'fork' || $env.type === 'clone' ? 
          $env.app_repo : 'https://github.com/open-toolchain/node-hello-world'
      type: $env.type || 'existing'
      has_issues: false
      enable_traceability: true
  # sample-build:
  #   service_id: pipeline
  #   parameters:
  #     services:
  #       - sample-repo
  #     name: '{{services.sample-repo.parameters.repo_name}}'
  #     ui-pipeline: true
  #     configuration:
  #       content:
  #         $text: pipeline.yml
  #       env:
  #         SAMPLE_REPO: sample-repo
  #         CF_APP_NAME: '{{form.pipeline.parameters.prod-app-name}}'
  #         PROD_SPACE_NAME: '{{form.pipeline.parameters.prod-space}}'
  #         PROD_ORG_NAME: '{{form.pipeline.parameters.prod-organization}}'
  #         PROD_REGION_ID: '{{form.pipeline.parameters.prod-region}}'
  #         API_KEY: '{{form.pipeline.parameters.api-key}}'
  #       execute: true
form:
  pipeline:
    parameters:
      prod-app-name: '{{services.sample-repo.parameters.repo_name}}'
    schema:
      $ref: deploy.json
